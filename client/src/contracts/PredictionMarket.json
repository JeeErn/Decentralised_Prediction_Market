{
  "contractName": "PredictionMarket",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "arbitrators",
      "outputs": [
        {
          "internalType": "int256",
          "name": "trustworthiness",
          "type": "int256"
        },
        {
          "internalType": "bool",
          "name": "isValid",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "traders",
      "outputs": [
        {
          "internalType": "int256",
          "name": "winScore",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "loseScore",
          "type": "int256"
        },
        {
          "internalType": "bool",
          "name": "isValid",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "createTrader",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "createArbitrator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"arbitrators\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"trustworthiness\",\"type\":\"int256\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createArbitrator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createTrader\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"traders\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"winScore\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"loseScore\",\"type\":\"int256\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/collinlim/Desktop/Desktop.nosync/School/CZ4153/Project/Decentralised_Prediction_Market/contracts/PredictionMarket.sol\":\"PredictionMarket\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/collinlim/Desktop/Desktop.nosync/School/CZ4153/Project/Decentralised_Prediction_Market/contracts/PredictionMarket.sol\":{\"keccak256\":\"0x3c11ee4f81078e7660ff69880bd2541515244ed93c60e17dd3519020def5d27e\",\"urls\":[\"bzz-raw://89251c0c8646f430361cd6eec34bcdd6a2fdecadeaeff803dda91cb3d9149e82\",\"dweb:/ipfs/QmQ3PREwvmfqzxQ5b3w6nNUTcyAwNSfwyz8T1s4fUd4mrb\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506103ac806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806351d0ea37146100515780637aaa11e5146100b457806392a88fa2146100be578063b227126814610128575b600080fd5b6100936004803603602081101561006757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610132565b60405180838152602001821515151581526020019250505060405180910390f35b6100bc610163565b005b610100600480360360208110156100d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061024a565b6040518084815260200183815260200182151515158152602001935050505060405180910390f35b610130610281565b005b60016020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16905082565b6000339050600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16156101c257600080fd5b60405180604001604052806064815260200160011515815250600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555090505050565b60006020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900460ff16905083565b60003390506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16156102df57600080fd5b60405180606001604052806064815260200160648152602001600115158152506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055509050505056fea265627a7a7231582068dcacf51a4acf6b13200d771161b97cb84c40956f1865747bf1c4a26adf059364736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806351d0ea37146100515780637aaa11e5146100b457806392a88fa2146100be578063b227126814610128575b600080fd5b6100936004803603602081101561006757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610132565b60405180838152602001821515151581526020019250505060405180910390f35b6100bc610163565b005b610100600480360360208110156100d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061024a565b6040518084815260200183815260200182151515158152602001935050505060405180910390f35b610130610281565b005b60016020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16905082565b6000339050600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16156101c257600080fd5b60405180604001604052806064815260200160011515815250600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555090505050565b60006020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900460ff16905083565b60003390506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16156102df57600080fd5b60405180606001604052806064815260200160648152602001600115158152506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055509050505056fea265627a7a7231582068dcacf51a4acf6b13200d771161b97cb84c40956f1865747bf1c4a26adf059364736f6c63430005100032",
  "sourceMap": "34:1477:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;34:1477:1;;;;;;;",
  "deployedSourceMap": "34:1477:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;34:1477:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;401:50;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;401:50:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;908:296;;;:::i;:::-;;353:42;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;353:42:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;625:277;;;:::i;:::-;;401:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;908:296::-;953:10;966;953:23;;1066:11;:15;1078:2;1066:15;;;;;;;;;;;;;;;:23;;;;;;;;;;;;1065:24;1057:33;;;;;;1176:21;;;;;;;;1187:3;1176:21;;;;1192:4;1176:21;;;;;1158:11;:15;1170:2;1158:15;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;908:296;:::o;353:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;625:277::-;666:10;679;666:23;;775:7;:11;783:2;775:11;;;;;;;;;;;;;;;:19;;;;;;;;;;;;774:20;766:29;;;;;;873:22;;;;;;;;880:3;873:22;;;;885:3;873:22;;;;890:4;873:22;;;;;859:7;:11;867:2;859:11;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;625:277;:::o",
  "source": "pragma solidity >=0.4.21 <0.7.0;\n\ncontract PredictionMarket {\n    // Structs for users and arbitrators. Default scores = 100\n    struct Trader {\n        int winScore;\n        int loseScore;\n        bool isValid; \n    }\n\n    struct Arbitrator {\n        int trustworthiness;\n        bool isValid;\n    }\n\n    // Maps of addresses to different entities\n    mapping (address => Trader) public traders;\n    mapping (address => Arbitrator) public arbitrators;\n    // TODO: Uncomment mapping for marketTopic when Topic contract is completed\n    // mapping (address => Topic) public marketTopics;\n\n\n    // Struct create functions\n    function createTrader() public {\n        address id = msg.sender;\n\n        // require that address has not been assigned to a trader\n        require(!traders[id].isValid);\n\n        // create new trader with the default values\n        traders[id] = Trader(100, 100, true);\n    }\n\n    function createArbitrator() public {\n        address id = msg.sender;\n\n        // require that address has not been assigned to a arbitrator\n        require(!arbitrators[id].isValid);\n\n        // create new arbitrator with the default values\n        arbitrators[id] = Arbitrator(100, true);\n    }\n\n    // TODO: To complete createTopic function when Topic contract is completed\n    // function createTopic(string _name, string _description, string[] _options, datetime _resolution, address _topicCreator, address[] _arbitrators) public {\n    //     // create new topic\n    //     // add to map\n    // }\n}",
  "sourcePath": "/Users/collinlim/Desktop/Desktop.nosync/School/CZ4153/Project/Decentralised_Prediction_Market/contracts/PredictionMarket.sol",
  "ast": {
    "absolutePath": "/Users/collinlim/Desktop/Desktop.nosync/School/CZ4153/Project/Decentralised_Prediction_Market/contracts/PredictionMarket.sol",
    "exportedSymbols": {
      "PredictionMarket": [
        112
      ]
    },
    "id": 113,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 38,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 112,
        "linearizedBaseContracts": [
          112
        ],
        "name": "PredictionMarket",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "PredictionMarket.Trader",
            "id": 45,
            "members": [
              {
                "constant": false,
                "id": 40,
                "name": "winScore",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "153:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 39,
                  "name": "int",
                  "nodeType": "ElementaryTypeName",
                  "src": "153:3:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "name": "loseScore",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "175:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 41,
                  "name": "int",
                  "nodeType": "ElementaryTypeName",
                  "src": "175:3:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "name": "isValid",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "198:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 43,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "198:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Trader",
            "nodeType": "StructDefinition",
            "scope": 112,
            "src": "129:89:1",
            "visibility": "public"
          },
          {
            "canonicalName": "PredictionMarket.Arbitrator",
            "id": 50,
            "members": [
              {
                "constant": false,
                "id": 47,
                "name": "trustworthiness",
                "nodeType": "VariableDeclaration",
                "scope": 50,
                "src": "252:19:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 46,
                  "name": "int",
                  "nodeType": "ElementaryTypeName",
                  "src": "252:3:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 49,
                "name": "isValid",
                "nodeType": "VariableDeclaration",
                "scope": 50,
                "src": "281:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 48,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "281:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Arbitrator",
            "nodeType": "StructDefinition",
            "scope": 112,
            "src": "224:76:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 54,
            "name": "traders",
            "nodeType": "VariableDeclaration",
            "scope": 112,
            "src": "353:42:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trader_$45_storage_$",
              "typeString": "mapping(address => struct PredictionMarket.Trader)"
            },
            "typeName": {
              "id": 53,
              "keyType": {
                "id": 51,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "362:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "353:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trader_$45_storage_$",
                "typeString": "mapping(address => struct PredictionMarket.Trader)"
              },
              "valueType": {
                "contractScope": null,
                "id": 52,
                "name": "Trader",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 45,
                "src": "373:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Trader_$45_storage_ptr",
                  "typeString": "struct PredictionMarket.Trader"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 58,
            "name": "arbitrators",
            "nodeType": "VariableDeclaration",
            "scope": 112,
            "src": "401:50:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Arbitrator_$50_storage_$",
              "typeString": "mapping(address => struct PredictionMarket.Arbitrator)"
            },
            "typeName": {
              "id": 57,
              "keyType": {
                "id": 55,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "410:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "401:31:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Arbitrator_$50_storage_$",
                "typeString": "mapping(address => struct PredictionMarket.Arbitrator)"
              },
              "valueType": {
                "contractScope": null,
                "id": 56,
                "name": "Arbitrator",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 50,
                "src": "421:10:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Arbitrator_$50_storage_ptr",
                  "typeString": "struct PredictionMarket.Arbitrator"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 84,
              "nodeType": "Block",
              "src": "656:246:1",
              "statements": [
                {
                  "assignments": [
                    62
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62,
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 84,
                      "src": "666:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 61,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "666:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 65,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 63,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "679:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "679:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "666:23:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "774:20:1",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 67,
                              "name": "traders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "775:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trader_$45_storage_$",
                                "typeString": "mapping(address => struct PredictionMarket.Trader storage ref)"
                              }
                            },
                            "id": 69,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 68,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "783:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "775:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trader_$45_storage",
                              "typeString": "struct PredictionMarket.Trader storage ref"
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isValid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44,
                          "src": "775:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 66,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        153,
                        154
                      ],
                      "referencedDeclaration": 153,
                      "src": "766:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "766:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "766:29:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 74,
                        "name": "traders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "859:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trader_$45_storage_$",
                          "typeString": "mapping(address => struct PredictionMarket.Trader storage ref)"
                        }
                      },
                      "id": 76,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 75,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "867:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "859:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trader_$45_storage",
                        "typeString": "struct PredictionMarket.Trader storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "880:3:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "885:3:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "890:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 77,
                        "name": "Trader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "873:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Trader_$45_storage_ptr_$",
                          "typeString": "type(struct PredictionMarket.Trader storage pointer)"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "873:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trader_$45_memory",
                        "typeString": "struct PredictionMarket.Trader memory"
                      }
                    },
                    "src": "859:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trader_$45_storage",
                      "typeString": "struct PredictionMarket.Trader storage ref"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "859:36:1"
                }
              ]
            },
            "documentation": null,
            "id": 85,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createTrader",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "646:2:1"
            },
            "returnParameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "656:0:1"
            },
            "scope": 112,
            "src": "625:277:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 110,
              "nodeType": "Block",
              "src": "943:261:1",
              "statements": [
                {
                  "assignments": [
                    89
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89,
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 110,
                      "src": "953:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 88,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "953:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 92,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 90,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "966:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "966:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "953:23:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1065:24:1",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 94,
                              "name": "arbitrators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "1066:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Arbitrator_$50_storage_$",
                                "typeString": "mapping(address => struct PredictionMarket.Arbitrator storage ref)"
                              }
                            },
                            "id": 96,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 95,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89,
                              "src": "1078:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1066:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Arbitrator_$50_storage",
                              "typeString": "struct PredictionMarket.Arbitrator storage ref"
                            }
                          },
                          "id": 97,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isValid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49,
                          "src": "1066:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 93,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        153,
                        154
                      ],
                      "referencedDeclaration": 153,
                      "src": "1057:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1057:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1057:33:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 101,
                        "name": "arbitrators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1158:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Arbitrator_$50_storage_$",
                          "typeString": "mapping(address => struct PredictionMarket.Arbitrator storage ref)"
                        }
                      },
                      "id": 103,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 102,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89,
                        "src": "1170:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1158:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Arbitrator_$50_storage",
                        "typeString": "struct PredictionMarket.Arbitrator storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1187:3:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1192:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 104,
                        "name": "Arbitrator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "1176:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Arbitrator_$50_storage_ptr_$",
                          "typeString": "type(struct PredictionMarket.Arbitrator storage pointer)"
                        }
                      },
                      "id": 107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1176:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Arbitrator_$50_memory",
                        "typeString": "struct PredictionMarket.Arbitrator memory"
                      }
                    },
                    "src": "1158:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Arbitrator_$50_storage",
                      "typeString": "struct PredictionMarket.Arbitrator storage ref"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1158:39:1"
                }
              ]
            },
            "documentation": null,
            "id": 111,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createArbitrator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "933:2:1"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "943:0:1"
            },
            "scope": 112,
            "src": "908:296:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 113,
        "src": "34:1477:1"
      }
    ],
    "src": "0:1511:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/collinlim/Desktop/Desktop.nosync/School/CZ4153/Project/Decentralised_Prediction_Market/contracts/PredictionMarket.sol",
    "exportedSymbols": {
      "PredictionMarket": [
        112
      ]
    },
    "id": 113,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 38,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 112,
        "linearizedBaseContracts": [
          112
        ],
        "name": "PredictionMarket",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "PredictionMarket.Trader",
            "id": 45,
            "members": [
              {
                "constant": false,
                "id": 40,
                "name": "winScore",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "153:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 39,
                  "name": "int",
                  "nodeType": "ElementaryTypeName",
                  "src": "153:3:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "name": "loseScore",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "175:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 41,
                  "name": "int",
                  "nodeType": "ElementaryTypeName",
                  "src": "175:3:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "name": "isValid",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "198:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 43,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "198:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Trader",
            "nodeType": "StructDefinition",
            "scope": 112,
            "src": "129:89:1",
            "visibility": "public"
          },
          {
            "canonicalName": "PredictionMarket.Arbitrator",
            "id": 50,
            "members": [
              {
                "constant": false,
                "id": 47,
                "name": "trustworthiness",
                "nodeType": "VariableDeclaration",
                "scope": 50,
                "src": "252:19:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 46,
                  "name": "int",
                  "nodeType": "ElementaryTypeName",
                  "src": "252:3:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 49,
                "name": "isValid",
                "nodeType": "VariableDeclaration",
                "scope": 50,
                "src": "281:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 48,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "281:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Arbitrator",
            "nodeType": "StructDefinition",
            "scope": 112,
            "src": "224:76:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 54,
            "name": "traders",
            "nodeType": "VariableDeclaration",
            "scope": 112,
            "src": "353:42:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trader_$45_storage_$",
              "typeString": "mapping(address => struct PredictionMarket.Trader)"
            },
            "typeName": {
              "id": 53,
              "keyType": {
                "id": 51,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "362:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "353:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trader_$45_storage_$",
                "typeString": "mapping(address => struct PredictionMarket.Trader)"
              },
              "valueType": {
                "contractScope": null,
                "id": 52,
                "name": "Trader",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 45,
                "src": "373:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Trader_$45_storage_ptr",
                  "typeString": "struct PredictionMarket.Trader"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 58,
            "name": "arbitrators",
            "nodeType": "VariableDeclaration",
            "scope": 112,
            "src": "401:50:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Arbitrator_$50_storage_$",
              "typeString": "mapping(address => struct PredictionMarket.Arbitrator)"
            },
            "typeName": {
              "id": 57,
              "keyType": {
                "id": 55,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "410:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "401:31:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Arbitrator_$50_storage_$",
                "typeString": "mapping(address => struct PredictionMarket.Arbitrator)"
              },
              "valueType": {
                "contractScope": null,
                "id": 56,
                "name": "Arbitrator",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 50,
                "src": "421:10:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Arbitrator_$50_storage_ptr",
                  "typeString": "struct PredictionMarket.Arbitrator"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 84,
              "nodeType": "Block",
              "src": "656:246:1",
              "statements": [
                {
                  "assignments": [
                    62
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62,
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 84,
                      "src": "666:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 61,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "666:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 65,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 63,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "679:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "679:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "666:23:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "774:20:1",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 67,
                              "name": "traders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "775:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trader_$45_storage_$",
                                "typeString": "mapping(address => struct PredictionMarket.Trader storage ref)"
                              }
                            },
                            "id": 69,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 68,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "783:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "775:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trader_$45_storage",
                              "typeString": "struct PredictionMarket.Trader storage ref"
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isValid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44,
                          "src": "775:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 66,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        153,
                        154
                      ],
                      "referencedDeclaration": 153,
                      "src": "766:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "766:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "766:29:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 74,
                        "name": "traders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "859:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trader_$45_storage_$",
                          "typeString": "mapping(address => struct PredictionMarket.Trader storage ref)"
                        }
                      },
                      "id": 76,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 75,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "867:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "859:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trader_$45_storage",
                        "typeString": "struct PredictionMarket.Trader storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "880:3:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "885:3:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "890:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 77,
                        "name": "Trader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "873:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Trader_$45_storage_ptr_$",
                          "typeString": "type(struct PredictionMarket.Trader storage pointer)"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "873:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trader_$45_memory",
                        "typeString": "struct PredictionMarket.Trader memory"
                      }
                    },
                    "src": "859:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trader_$45_storage",
                      "typeString": "struct PredictionMarket.Trader storage ref"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "859:36:1"
                }
              ]
            },
            "documentation": null,
            "id": 85,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createTrader",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "646:2:1"
            },
            "returnParameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "656:0:1"
            },
            "scope": 112,
            "src": "625:277:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 110,
              "nodeType": "Block",
              "src": "943:261:1",
              "statements": [
                {
                  "assignments": [
                    89
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89,
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 110,
                      "src": "953:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 88,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "953:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 92,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 90,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "966:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "966:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "953:23:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1065:24:1",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 94,
                              "name": "arbitrators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "1066:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Arbitrator_$50_storage_$",
                                "typeString": "mapping(address => struct PredictionMarket.Arbitrator storage ref)"
                              }
                            },
                            "id": 96,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 95,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89,
                              "src": "1078:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1066:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Arbitrator_$50_storage",
                              "typeString": "struct PredictionMarket.Arbitrator storage ref"
                            }
                          },
                          "id": 97,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isValid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49,
                          "src": "1066:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 93,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        153,
                        154
                      ],
                      "referencedDeclaration": 153,
                      "src": "1057:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1057:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1057:33:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 101,
                        "name": "arbitrators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1158:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Arbitrator_$50_storage_$",
                          "typeString": "mapping(address => struct PredictionMarket.Arbitrator storage ref)"
                        }
                      },
                      "id": 103,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 102,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89,
                        "src": "1170:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1158:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Arbitrator_$50_storage",
                        "typeString": "struct PredictionMarket.Arbitrator storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1187:3:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1192:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 104,
                        "name": "Arbitrator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "1176:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Arbitrator_$50_storage_ptr_$",
                          "typeString": "type(struct PredictionMarket.Arbitrator storage pointer)"
                        }
                      },
                      "id": 107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1176:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Arbitrator_$50_memory",
                        "typeString": "struct PredictionMarket.Arbitrator memory"
                      }
                    },
                    "src": "1158:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Arbitrator_$50_storage",
                      "typeString": "struct PredictionMarket.Arbitrator storage ref"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1158:39:1"
                }
              ]
            },
            "documentation": null,
            "id": 111,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createArbitrator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "933:2:1"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "943:0:1"
            },
            "scope": 112,
            "src": "908:296:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 113,
        "src": "34:1477:1"
      }
    ],
    "src": "0:1511:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xE89D89e887b4a44763Fc6213CEC6c84e81806217",
      "transactionHash": "0xc6ee71613ead62b192b13066cb8f0f651a79f7a5f05c6a8b86c35fff7ab54256"
    }
  },
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-10-09T02:18:58.025Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}