{
  "contractName": "PredictionMarket",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_topicAddress",
          "type": "address"
        }
      ],
      "name": "TopicCreated",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "arbitrators",
      "outputs": [
        {
          "internalType": "int256",
          "name": "trustworthiness",
          "type": "int256"
        },
        {
          "internalType": "bool",
          "name": "isValid",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "marketTopics",
      "outputs": [
        {
          "internalType": "contract Topic",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "traders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "winScore",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loseScore",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isValid",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "createTrader",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "createArbitrator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "bytes32[]",
          "name": "options",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "expiryDate",
          "type": "uint256"
        }
      ],
      "name": "createTopic",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "topicAddress",
          "type": "address"
        }
      ],
      "name": "getCreatorAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "topicAddress",
          "type": "address"
        }
      ],
      "name": "getName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "topicAddress",
          "type": "address"
        }
      ],
      "name": "getDescription",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "topicAddress",
          "type": "address"
        }
      ],
      "name": "getOptions",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "topicAddress",
          "type": "address"
        }
      ],
      "name": "getMarketCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "topicAddress",
          "type": "address"
        }
      ],
      "name": "getCreatorBond",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "topicAddress",
          "type": "address"
        }
      ],
      "name": "getExpiryDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_topicAddress\",\"type\":\"address\"}],\"name\":\"TopicCreated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"arbitrators\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"trustworthiness\",\"type\":\"int256\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createArbitrator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"options\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"expiryDate\",\"type\":\"uint256\"}],\"name\":\"createTopic\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createTrader\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"topicAddress\",\"type\":\"address\"}],\"name\":\"getCreatorAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"topicAddress\",\"type\":\"address\"}],\"name\":\"getCreatorBond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"topicAddress\",\"type\":\"address\"}],\"name\":\"getDescription\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"topicAddress\",\"type\":\"address\"}],\"name\":\"getExpiryDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"topicAddress\",\"type\":\"address\"}],\"name\":\"getMarketCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"topicAddress\",\"type\":\"address\"}],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"topicAddress\",\"type\":\"address\"}],\"name\":\"getOptions\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"marketTopics\",\"outputs\":[{\"internalType\":\"contract Topic\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"traders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"winScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loseScore\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/collinlim/Desktop/Desktop.nosync/School/CZ4153/Project/Decentralised_Prediction_Market/contracts/PredictionMarket.sol\":\"PredictionMarket\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/collinlim/Desktop/Desktop.nosync/School/CZ4153/Project/Decentralised_Prediction_Market/contracts/PredictionMarket.sol\":{\"keccak256\":\"0xd7212c7c856a80579f31c1ffe1e565766264217c31014f3db2ffb491216b916f\",\"urls\":[\"bzz-raw://a31783266ae139741ced6561435e81395585730b54a4ac7199cc9fd7186421a2\",\"dweb:/ipfs/QmXUBFKpmmwHF3au2sBoc2GkchXTScVxguAf2Kg4PRdgVc\"]},\"/Users/collinlim/Desktop/Desktop.nosync/School/CZ4153/Project/Decentralised_Prediction_Market/contracts/Topic.sol\":{\"keccak256\":\"0xfe26a1b4a60fce356249822d41a29458c198eb23895429906b5b6530ab780169\",\"urls\":[\"bzz-raw://0a67edc8671f91ce04619822081c18219698bccda649a03e794b9ce603993c9a\",\"dweb:/ipfs/QmfKFcRx5jWJAeU5YZgCa5YUSNi83TBU1nM8tbXJzBwT4D\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506127fb806100206000396000f3fe608060405260043610620000d45760003560e01c80639ed795f6116200008b578063c082c30c1162000061578063c082c30c1462000698578063c86b2159146200072d578063d146d31d1462000796578063e7c256b614620007ff57620000d4565b80639ed795f614620003b1578063b227126814620005ad578063b4b1d9c714620005c757620000d4565b806302d54fbf14620000d95780633fd8667b146200016e57806351d0ea3714620001d75780635fd4b08a146200024b5780637aaa11e5146200031c57806392a88fa21462000336575b600080fd5b348015620000e657600080fd5b506200012c60048036036020811015620000ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620008ab565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200017b57600080fd5b50620001c1600480360360208110156200019457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620008de565b6040518082815260200191505060405180910390f35b348015620001e457600080fd5b506200022a60048036036020811015620001fd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620009ca565b60405180838152602001821515151581526020019250505060405180910390f35b3480156200025857600080fd5b506200029e600480360360208110156200027157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620009fb565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015620002e0578082015181840152602081019050620002c3565b50505050905090810190601f1680156200030e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156200032957600080fd5b506200033462000bab565b005b3480156200034357600080fd5b5062000389600480360360208110156200035c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062000c93565b6040518084815260200183815260200182151515158152602001935050505060405180910390f35b620005ab60048036036080811015620003c957600080fd5b8101908080359060200190640100000000811115620003e757600080fd5b820183602082011115620003fa57600080fd5b803590602001918460018302840111640100000000831117156200041d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156200048157600080fd5b8201836020820111156200049457600080fd5b80359060200191846001830284011164010000000083111715620004b757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156200051b57600080fd5b8201836020820111156200052e57600080fd5b803590602001918460208302840111640100000000831117156200055157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919050505062000cca565b005b348015620005ba57600080fd5b50620005c562000fcd565b005b348015620005d457600080fd5b506200061a60048036036020811015620005ed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620010c4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156200065c5780820151818401526020810190506200063f565b50505050905090810190601f1680156200068a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015620006a557600080fd5b50620006eb60048036036020811015620006be57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001274565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200073a57600080fd5b5062000780600480360360208110156200075357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001360565b6040518082815260200191505060405180910390f35b348015620007a357600080fd5b50620007e960048036036020811015620007bc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200144c565b6040518082815260200191505060405180910390f35b3480156200080c57600080fd5b5062000852600480360360208110156200082557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001538565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015620008975780820151818401526020810190506200087a565b505050509050019250505060405180910390f35b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663459d6e4f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200098657600080fd5b505afa1580156200099b573d6000803e3d6000fd5b505050506040513d6020811015620009b257600080fd5b81019080805190602001909291905050509050919050565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16905082565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b15801562000aa357600080fd5b505afa15801562000ab8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101562000ae357600080fd5b810190808051604051939291908464010000000082111562000b0457600080fd5b8382019150602082018581111562000b1b57600080fd5b825186600182028301116401000000008211171562000b3957600080fd5b8083526020830192505050908051906020019080838360005b8381101562000b6f57808201518184015260208101905062000b52565b50505050905090810190601f16801562000b9d5780820380516001836020036101000a031916815260200191505b506040525050509050919050565b6000339050600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff161562000c0b57600080fd5b60405180604001604052806064815260200160011515815250600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555090505050565b60006020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900460ff16905083565b60003390506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1662000d2857600080fd5b6000341162000d3657600080fd5b6000349050600082878787858860405162000d5190620016c3565b808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001868152602001858152602001848103845289818151815260200191508051906020019080838360005b8381101562000dd657808201518184015260208101905062000db9565b50505050905090810190601f16801562000e045780820380516001836020036101000a031916815260200191505b50848103835288818151815260200191508051906020019080838360005b8381101562000e3f57808201518184015260208101905062000e22565b50505050905090810190601f16801562000e6d5780820380516001836020036101000a031916815260200191505b50848103825287818151815260200191508051906020019060200280838360005b8381101562000eab57808201518184015260208101905062000e8e565b505050509050019950505050505050505050604051809103906000f08015801562000eda573d6000803e3d6000fd5b509050600081905081600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f3c1b2955a570d7b24867f47b5827c8c97e344bed881c4519bad1dd91656279da81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050505050505050565b60003390506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16156200102c57600080fd5b60405180606001604052806064815260200160648152602001600115158152506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555090505050565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637284e4166040518163ffffffff1660e01b815260040160006040518083038186803b1580156200116c57600080fd5b505afa15801562001181573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015620011ac57600080fd5b8101908080516040519392919084640100000000821115620011cd57600080fd5b83820191506020820185811115620011e457600080fd5b82518660018202830111640100000000821117156200120257600080fd5b8083526020830192505050908051906020019080838360005b83811015620012385780820151818401526020810190506200121b565b50505050905090810190601f168015620012665780820380516001836020036101000a031916815260200191505b506040525050509050919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbcc1e716040518163ffffffff1660e01b815260040160206040518083038186803b1580156200131c57600080fd5b505afa15801562001331573d6000803e3d6000fd5b505050506040513d60208110156200134857600080fd5b81019080805190602001909291905050509050919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663516dde436040518163ffffffff1660e01b815260040160206040518083038186803b1580156200140857600080fd5b505afa1580156200141d573d6000803e3d6000fd5b505050506040513d60208110156200143457600080fd5b81019080805190602001909291905050509050919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632c135b936040518163ffffffff1660e01b815260040160206040518083038186803b158015620014f457600080fd5b505afa15801562001509573d6000803e3d6000fd5b505050506040513d60208110156200152057600080fd5b81019080805190602001909291905050509050919050565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cc2ee1966040518163ffffffff1660e01b815260040160006040518083038186803b158015620015e057600080fd5b505afa158015620015f5573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156200162057600080fd5b81019080805160405193929190846401000000008211156200164157600080fd5b838201915060208201858111156200165857600080fd5b82518660208202830111640100000000821117156200167657600080fd5b8083526020830192505050908051906020019060200280838360005b83811015620016af57808201518184015260208101905062001692565b505050509050016040525050509050919050565b6110f580620016d28339019056fe6080604052604051620010f5380380620010f5833981810160405260c08110156200002957600080fd5b8101908080519060200190929190805160405193929190846401000000008211156200005457600080fd5b838201915060208201858111156200006b57600080fd5b82518660018202830111640100000000821117156200008957600080fd5b8083526020830192505050908051906020019080838360005b83811015620000bf578082015181840152602081019050620000a2565b50505050905090810190601f168015620000ed5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011157600080fd5b838201915060208201858111156200012857600080fd5b82518660018202830111640100000000821117156200014657600080fd5b8083526020830192505050908051906020019080838360005b838110156200017c5780820151818401526020810190506200015f565b50505050905090810190601f168015620001aa5780820380516001836020036101000a031916815260200191505b5060405260200180516040519392919084640100000000821115620001ce57600080fd5b83820191506020820185811115620001e557600080fd5b82518660208202830111640100000000821117156200020357600080fd5b8083526020830192505050908051906020019060200280838360005b838110156200023c5780820151818401526020810190506200021f565b505050509050016040526020018051906020019092919080519060200190929190505050856000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508460019080519060200190620002b8929190620003bf565b508360029080519060200190620002d1929190620003bf565b508260039080519060200190620002ea92919062000446565b506000600481905550816005819055508060068190555060008090505b6004811015620003b257604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815250600782600481106200034c57fe5b600202016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050808060010191505062000307565b50505050505050620004e8565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200040257805160ff191683800117855562000433565b8280016001018555821562000433579182015b828111156200043257825182559160200191906001019062000415565b5b50905062000442919062000498565b5090565b82805482825590600052602060002090810192821562000485579160200282015b828111156200048457825182559160200191906001019062000467565b5b509050620004949190620004c0565b5090565b620004bd91905b80821115620004b95760008160009055506001016200049f565b5090565b90565b620004e591905b80821115620004e1576000816000905550600101620004c7565b5090565b90565b610bfd80620004f86000396000f3fe6080604052600436106100a75760003560e01c8063516dde4311610064578063516dde431461029d578063722713f7146102c85780637284e416146102f3578063b745467014610383578063cc2ee196146103d2578063fbcc1e711461043e576100a7565b806306fdde03146100ac578063288fa8021461013c5780632c135b93146101a8578063409e2205146101d3578063459d6e4f14610222578063509bd3371461024d575b600080fd5b3480156100b857600080fd5b506100c1610495565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101015780820151818401526020810190506100e6565b50505050905090810190601f16801561012e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561014857600080fd5b50610151610533565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610194578082015181840152602081019050610179565b505050509050019250505060405180910390f35b3480156101b457600080fd5b506101bd6105c3565b6040518082815260200191505060405180910390f35b3480156101df57600080fd5b5061020c600480360360208110156101f657600080fd5b81019080803590602001909291905050506105c9565b6040518082815260200191505060405180910390f35b34801561022e57600080fd5b506102376105ea565b6040518082815260200191505060405180910390f35b6102836004803603604081101561026357600080fd5b8101908080359060200190929190803590602001909291905050506105f0565b604051808215151515815260200191505060405180910390f35b3480156102a957600080fd5b506102b26108f8565b6040518082815260200191505060405180910390f35b3480156102d457600080fd5b506102dd6108fe565b6040518082815260200191505060405180910390f35b3480156102ff57600080fd5b50610308610906565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561034857808201518184015260208101905061032d565b50505050905090810190601f1680156103755780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561038f57600080fd5b506103bc600480360360208110156103a657600080fd5b81019080803590602001909291905050506109a4565b6040518082815260200191505060405180910390f35b3480156103de57600080fd5b506103e76109c2565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561042a57808201518184015260208101905061040f565b505050509050019250505060405180910390f35b34801561044a57600080fd5b50610453610a56565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561052b5780601f106105005761010080835404028352916020019161052b565b820191906000526020600020905b81548152906001019060200180831161050e57829003601f168201915b505050505081565b606060006004905060608160405190808252806020026020018201604052801561056c5781602001602082028038833980820191505090505b50905060008090505b828110156105ba576007816004811061058a57fe5b600202016000015460001b8282815181106105a157fe5b6020026020010181815250508080600101915050610575565b50809250505090565b60045481565b600381815481106105d657fe5b906000526020600020016000915090505481565b60055481565b60006105fa610a7b565b60405180604001604052808581526020013373ffffffffffffffffffffffffffffffffffffffff168152509050836007846004811061063557fe5b60020201600001541061064c5760009150506108f2565b6000670de0b6b3a76400009050610661610aab565b60008090505b600481101561071657858114610709576007816004811061068457fe5b6002020160000154830392506007816004811061069d57fe5b6002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168282600481106106d157fe5b602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b8080600101915050610667565b5085821015610852573381866004811061072c57fe5b602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061076b610acd565b6040518060200160405280838152509050600f81908060018154018082558091505090600182039060005260206000209060040201600090919290919091506000820151816000019060046107c1929190610ae6565b505050503373ffffffffffffffffffffffffffffffffffffffff166108fc8489039081150290604051600060405180830381858888f1935050505015801561080d573d6000803e3d6000fd5b5060008090505b60048110156108445760006007826004811061082c57fe5b60020201600001819055508080600101915050610814565b5060019450505050506108f2565b61085a610a7b565b60405180604001604052808881526020013373ffffffffffffffffffffffffffffffffffffffff168152509050806007876004811061089557fe5b600202016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050505050505b92915050565b60065481565b600047905090565b60028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561099c5780601f106109715761010080835404028352916020019161099c565b820191906000526020600020905b81548152906001019060200180831161097f57829003601f168201915b505050505081565b6000600782600481106109b357fe5b60020201600001549050919050565b6060600060038054905090506060816040519080825280602002602001820160405280156109ff5781602001602082028038833980820191505090505b50905060008090505b82811015610a4d5760038181548110610a1d57fe5b9060005260206000200154828281518110610a3457fe5b6020026020010181815250508080600101915050610a08565b50809250505090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6040518060800160405280600490602082028038833980820191505090505090565b6040518060200160405280610ae0610b63565b81525090565b8260048101928215610b52579160200282015b82811115610b515782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610af9565b5b509050610b5f9190610b85565b5090565b6040518060800160405280600490602082028038833980820191505090505090565b610bc591905b80821115610bc157600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101610b8b565b5090565b9056fea265627a7a72315820931a1b9507968cd2cf27c83360f4300b2f8742a19f3971a17375f4141b6f20df64736f6c63430005100032a265627a7a7231582093675e3e1ec2e1f699c4d7df0915938d848cac7c08413d361ced6950dbb5b62064736f6c63430005100032",
  "deployedBytecode": "0x608060405260043610620000d45760003560e01c80639ed795f6116200008b578063c082c30c1162000061578063c082c30c1462000698578063c86b2159146200072d578063d146d31d1462000796578063e7c256b614620007ff57620000d4565b80639ed795f614620003b1578063b227126814620005ad578063b4b1d9c714620005c757620000d4565b806302d54fbf14620000d95780633fd8667b146200016e57806351d0ea3714620001d75780635fd4b08a146200024b5780637aaa11e5146200031c57806392a88fa21462000336575b600080fd5b348015620000e657600080fd5b506200012c60048036036020811015620000ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620008ab565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200017b57600080fd5b50620001c1600480360360208110156200019457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620008de565b6040518082815260200191505060405180910390f35b348015620001e457600080fd5b506200022a60048036036020811015620001fd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620009ca565b60405180838152602001821515151581526020019250505060405180910390f35b3480156200025857600080fd5b506200029e600480360360208110156200027157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620009fb565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015620002e0578082015181840152602081019050620002c3565b50505050905090810190601f1680156200030e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156200032957600080fd5b506200033462000bab565b005b3480156200034357600080fd5b5062000389600480360360208110156200035c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062000c93565b6040518084815260200183815260200182151515158152602001935050505060405180910390f35b620005ab60048036036080811015620003c957600080fd5b8101908080359060200190640100000000811115620003e757600080fd5b820183602082011115620003fa57600080fd5b803590602001918460018302840111640100000000831117156200041d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156200048157600080fd5b8201836020820111156200049457600080fd5b80359060200191846001830284011164010000000083111715620004b757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156200051b57600080fd5b8201836020820111156200052e57600080fd5b803590602001918460208302840111640100000000831117156200055157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919050505062000cca565b005b348015620005ba57600080fd5b50620005c562000fcd565b005b348015620005d457600080fd5b506200061a60048036036020811015620005ed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620010c4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156200065c5780820151818401526020810190506200063f565b50505050905090810190601f1680156200068a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015620006a557600080fd5b50620006eb60048036036020811015620006be57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001274565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200073a57600080fd5b5062000780600480360360208110156200075357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001360565b6040518082815260200191505060405180910390f35b348015620007a357600080fd5b50620007e960048036036020811015620007bc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200144c565b6040518082815260200191505060405180910390f35b3480156200080c57600080fd5b5062000852600480360360208110156200082557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001538565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015620008975780820151818401526020810190506200087a565b505050509050019250505060405180910390f35b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663459d6e4f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200098657600080fd5b505afa1580156200099b573d6000803e3d6000fd5b505050506040513d6020811015620009b257600080fd5b81019080805190602001909291905050509050919050565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16905082565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b15801562000aa357600080fd5b505afa15801562000ab8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101562000ae357600080fd5b810190808051604051939291908464010000000082111562000b0457600080fd5b8382019150602082018581111562000b1b57600080fd5b825186600182028301116401000000008211171562000b3957600080fd5b8083526020830192505050908051906020019080838360005b8381101562000b6f57808201518184015260208101905062000b52565b50505050905090810190601f16801562000b9d5780820380516001836020036101000a031916815260200191505b506040525050509050919050565b6000339050600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff161562000c0b57600080fd5b60405180604001604052806064815260200160011515815250600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555090505050565b60006020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900460ff16905083565b60003390506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1662000d2857600080fd5b6000341162000d3657600080fd5b6000349050600082878787858860405162000d5190620016c3565b808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001868152602001858152602001848103845289818151815260200191508051906020019080838360005b8381101562000dd657808201518184015260208101905062000db9565b50505050905090810190601f16801562000e045780820380516001836020036101000a031916815260200191505b50848103835288818151815260200191508051906020019080838360005b8381101562000e3f57808201518184015260208101905062000e22565b50505050905090810190601f16801562000e6d5780820380516001836020036101000a031916815260200191505b50848103825287818151815260200191508051906020019060200280838360005b8381101562000eab57808201518184015260208101905062000e8e565b505050509050019950505050505050505050604051809103906000f08015801562000eda573d6000803e3d6000fd5b509050600081905081600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f3c1b2955a570d7b24867f47b5827c8c97e344bed881c4519bad1dd91656279da81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050505050505050565b60003390506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16156200102c57600080fd5b60405180606001604052806064815260200160648152602001600115158152506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555090505050565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637284e4166040518163ffffffff1660e01b815260040160006040518083038186803b1580156200116c57600080fd5b505afa15801562001181573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015620011ac57600080fd5b8101908080516040519392919084640100000000821115620011cd57600080fd5b83820191506020820185811115620011e457600080fd5b82518660018202830111640100000000821117156200120257600080fd5b8083526020830192505050908051906020019080838360005b83811015620012385780820151818401526020810190506200121b565b50505050905090810190601f168015620012665780820380516001836020036101000a031916815260200191505b506040525050509050919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbcc1e716040518163ffffffff1660e01b815260040160206040518083038186803b1580156200131c57600080fd5b505afa15801562001331573d6000803e3d6000fd5b505050506040513d60208110156200134857600080fd5b81019080805190602001909291905050509050919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663516dde436040518163ffffffff1660e01b815260040160206040518083038186803b1580156200140857600080fd5b505afa1580156200141d573d6000803e3d6000fd5b505050506040513d60208110156200143457600080fd5b81019080805190602001909291905050509050919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632c135b936040518163ffffffff1660e01b815260040160206040518083038186803b158015620014f457600080fd5b505afa15801562001509573d6000803e3d6000fd5b505050506040513d60208110156200152057600080fd5b81019080805190602001909291905050509050919050565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cc2ee1966040518163ffffffff1660e01b815260040160006040518083038186803b158015620015e057600080fd5b505afa158015620015f5573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156200162057600080fd5b81019080805160405193929190846401000000008211156200164157600080fd5b838201915060208201858111156200165857600080fd5b82518660208202830111640100000000821117156200167657600080fd5b8083526020830192505050908051906020019060200280838360005b83811015620016af57808201518184015260208101905062001692565b505050509050016040525050509050919050565b6110f580620016d28339019056fe6080604052604051620010f5380380620010f5833981810160405260c08110156200002957600080fd5b8101908080519060200190929190805160405193929190846401000000008211156200005457600080fd5b838201915060208201858111156200006b57600080fd5b82518660018202830111640100000000821117156200008957600080fd5b8083526020830192505050908051906020019080838360005b83811015620000bf578082015181840152602081019050620000a2565b50505050905090810190601f168015620000ed5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011157600080fd5b838201915060208201858111156200012857600080fd5b82518660018202830111640100000000821117156200014657600080fd5b8083526020830192505050908051906020019080838360005b838110156200017c5780820151818401526020810190506200015f565b50505050905090810190601f168015620001aa5780820380516001836020036101000a031916815260200191505b5060405260200180516040519392919084640100000000821115620001ce57600080fd5b83820191506020820185811115620001e557600080fd5b82518660208202830111640100000000821117156200020357600080fd5b8083526020830192505050908051906020019060200280838360005b838110156200023c5780820151818401526020810190506200021f565b505050509050016040526020018051906020019092919080519060200190929190505050856000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508460019080519060200190620002b8929190620003bf565b508360029080519060200190620002d1929190620003bf565b508260039080519060200190620002ea92919062000446565b506000600481905550816005819055508060068190555060008090505b6004811015620003b257604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815250600782600481106200034c57fe5b600202016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050808060010191505062000307565b50505050505050620004e8565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200040257805160ff191683800117855562000433565b8280016001018555821562000433579182015b828111156200043257825182559160200191906001019062000415565b5b50905062000442919062000498565b5090565b82805482825590600052602060002090810192821562000485579160200282015b828111156200048457825182559160200191906001019062000467565b5b509050620004949190620004c0565b5090565b620004bd91905b80821115620004b95760008160009055506001016200049f565b5090565b90565b620004e591905b80821115620004e1576000816000905550600101620004c7565b5090565b90565b610bfd80620004f86000396000f3fe6080604052600436106100a75760003560e01c8063516dde4311610064578063516dde431461029d578063722713f7146102c85780637284e416146102f3578063b745467014610383578063cc2ee196146103d2578063fbcc1e711461043e576100a7565b806306fdde03146100ac578063288fa8021461013c5780632c135b93146101a8578063409e2205146101d3578063459d6e4f14610222578063509bd3371461024d575b600080fd5b3480156100b857600080fd5b506100c1610495565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101015780820151818401526020810190506100e6565b50505050905090810190601f16801561012e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561014857600080fd5b50610151610533565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610194578082015181840152602081019050610179565b505050509050019250505060405180910390f35b3480156101b457600080fd5b506101bd6105c3565b6040518082815260200191505060405180910390f35b3480156101df57600080fd5b5061020c600480360360208110156101f657600080fd5b81019080803590602001909291905050506105c9565b6040518082815260200191505060405180910390f35b34801561022e57600080fd5b506102376105ea565b6040518082815260200191505060405180910390f35b6102836004803603604081101561026357600080fd5b8101908080359060200190929190803590602001909291905050506105f0565b604051808215151515815260200191505060405180910390f35b3480156102a957600080fd5b506102b26108f8565b6040518082815260200191505060405180910390f35b3480156102d457600080fd5b506102dd6108fe565b6040518082815260200191505060405180910390f35b3480156102ff57600080fd5b50610308610906565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561034857808201518184015260208101905061032d565b50505050905090810190601f1680156103755780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561038f57600080fd5b506103bc600480360360208110156103a657600080fd5b81019080803590602001909291905050506109a4565b6040518082815260200191505060405180910390f35b3480156103de57600080fd5b506103e76109c2565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561042a57808201518184015260208101905061040f565b505050509050019250505060405180910390f35b34801561044a57600080fd5b50610453610a56565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561052b5780601f106105005761010080835404028352916020019161052b565b820191906000526020600020905b81548152906001019060200180831161050e57829003601f168201915b505050505081565b606060006004905060608160405190808252806020026020018201604052801561056c5781602001602082028038833980820191505090505b50905060008090505b828110156105ba576007816004811061058a57fe5b600202016000015460001b8282815181106105a157fe5b6020026020010181815250508080600101915050610575565b50809250505090565b60045481565b600381815481106105d657fe5b906000526020600020016000915090505481565b60055481565b60006105fa610a7b565b60405180604001604052808581526020013373ffffffffffffffffffffffffffffffffffffffff168152509050836007846004811061063557fe5b60020201600001541061064c5760009150506108f2565b6000670de0b6b3a76400009050610661610aab565b60008090505b600481101561071657858114610709576007816004811061068457fe5b6002020160000154830392506007816004811061069d57fe5b6002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168282600481106106d157fe5b602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b8080600101915050610667565b5085821015610852573381866004811061072c57fe5b602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061076b610acd565b6040518060200160405280838152509050600f81908060018154018082558091505090600182039060005260206000209060040201600090919290919091506000820151816000019060046107c1929190610ae6565b505050503373ffffffffffffffffffffffffffffffffffffffff166108fc8489039081150290604051600060405180830381858888f1935050505015801561080d573d6000803e3d6000fd5b5060008090505b60048110156108445760006007826004811061082c57fe5b60020201600001819055508080600101915050610814565b5060019450505050506108f2565b61085a610a7b565b60405180604001604052808881526020013373ffffffffffffffffffffffffffffffffffffffff168152509050806007876004811061089557fe5b600202016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050505050505b92915050565b60065481565b600047905090565b60028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561099c5780601f106109715761010080835404028352916020019161099c565b820191906000526020600020905b81548152906001019060200180831161097f57829003601f168201915b505050505081565b6000600782600481106109b357fe5b60020201600001549050919050565b6060600060038054905090506060816040519080825280602002602001820160405280156109ff5781602001602082028038833980820191505090505b50905060008090505b82811015610a4d5760038181548110610a1d57fe5b9060005260206000200154828281518110610a3457fe5b6020026020010181815250508080600101915050610a08565b50809250505090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6040518060800160405280600490602082028038833980820191505090505090565b6040518060200160405280610ae0610b63565b81525090565b8260048101928215610b52579160200282015b82811115610b515782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610af9565b5b509050610b5f9190610b85565b5090565b6040518060800160405280600490602082028038833980820191505090505090565b610bc591905b80821115610bc157600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101610b8b565b5090565b9056fea265627a7a72315820931a1b9507968cd2cf27c83360f4300b2f8742a19f3971a17375f4141b6f20df64736f6c63430005100032a265627a7a7231582093675e3e1ec2e1f699c4d7df0915938d848cac7c08413d361ced6950dbb5b62064736f6c63430005100032",
  "sourceMap": "56:3379:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;56:3379:1;;;;;;;",
  "deployedSourceMap": "56:3379:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;481:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;481:46:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;481:46:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3135:145;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3135:145:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3135:145:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;425:50;;8:9:-1;5:2;;;30:1;27;20:12;5:2;425:50:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;425:50:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2524:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2524:140:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2524:140:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2524:140:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;854:296;;8:9:-1;5:2;;;30:1;27;20:12;5:2;854:296:1;;;:::i;:::-;;377:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;377:42:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;377:42:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1171:792;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1171:792:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1171:792:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1171:792:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1171:792:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1171:792:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1171:792:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1171:792:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1171:792:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1171:792:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1171:792:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1171:792:1;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1171:792:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1171:792:1;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;566:282;;8:9:-1;5:2;;;30:1;27;20:12;5:2;566:282:1;;;:::i;:::-;;2670:154;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2670:154:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2670:154:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2670:154:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2358:160;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2358:160:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2358:160:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3286:146;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3286:146:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3286:146:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2988:141;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2988:141:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2988:141:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2830:152;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2830:152:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2830:152:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2830:152:1;;;;;;;;;;;;;;;;;481:46;;;;;;;;;;;;;;;;;;;;;;:::o;3135:145::-;3210:4;3233:12;:26;3246:12;3233:26;;;;;;;;;;;;;;;;;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3233:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3233:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3233:40:1;;;;;;;;;;;;;;;;3226:47;;3135:145;;;:::o;425:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2524:140::-;2592:13;2624:12;:26;2637:12;2624:26;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;:33;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2624:33:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2624:33:1;;;;;;39:16:-1;36:1;17:17;2:54;2624:33:1;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2624:33:1;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;2624:33:1;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2624:33:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2617:40;;2524:140;;;:::o;854:296::-;899:10;912;899:23;;1012:11;:15;1024:2;1012:15;;;;;;;;;;;;;;;:23;;;;;;;;;;;;1011:24;1003:33;;;;;;1122:21;;;;;;;;1133:3;1122:21;;;;1138:4;1122:21;;;;;1104:11;:15;1116:2;1104:15;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;854:296;:::o;377:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1171:792::-;1332:25;1360:10;1332:38;;1435:7;:18;1443:9;1435:18;;;;;;;;;;;;;;;:26;;;;;;;;;;;;1427:35;;;;;;1561:7;1549:9;:19;1541:28;;;;;;1580:14;1597:9;1580:26;;1616:14;1643:9;1654:4;1660:11;1673:7;1682:9;1693:10;1633:71;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1633:71:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1633:71:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1633:71:1;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1633:71:1;1616:88;;1714:28;1769:8;1714:66;;1907:8;1878:12;:26;1891:12;1878:26;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;1930:26;1943:12;1930:26;;;;;;;;;;;;;;;;;;;;;;1171:792;;;;;;;;:::o;566:282::-;607:10;620;607:23;;718:7;:11;726:2;718:11;;;;;;;;;;;;;;;:19;;;;;;;;;;;;717:20;709:29;;;;;;819:22;;;;;;;;826:3;819:22;;;;831:3;819:22;;;;836:4;819:22;;;;;805:7;:11;813:2;805:11;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;566:282;:::o;2670:154::-;2745:13;2777:12;:26;2790:12;2777:26;;;;;;;;;;;;;;;;;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2777:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2777:40:1;;;;;;39:16:-1;36:1;17:17;2:54;2777:40:1;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2777:40:1;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;2777:40:1;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2777:40:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2770:47;;2670:154;;;:::o;2358:160::-;2436:15;2470:12;:26;2483:12;2470:26;;;;;;;;;;;;;;;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2470:41:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2470:41:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2470:41:1;;;;;;;;;;;;;;;;2463:48;;2358:160;;;:::o;3286:146::-;3360:7;3386:12;:26;3399:12;3386:26;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;:39;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3386:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3386:39:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3386:39:1;;;;;;;;;;;;;;;;3379:46;;3286:146;;;:::o;2988:141::-;3061:4;3084:12;:26;3097:12;3084:26;;;;;;;;;;;;;;;;;;;;;;;;;:36;;;:38;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3084:38:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3084:38:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3084:38:1;;;;;;;;;;;;;;;;3077:45;;2988:141;;;:::o;2830:152::-;2901:16;2936:12;:26;2949:12;2936:26;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;:39;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2936:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2936:39:1;;;;;;39:16:-1;36:1;17:17;2:54;2936:39:1;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2936:39:1;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;385:12;380:3;373:25;421:4;416:3;412:14;405:21;;0:433;;2936:39:1;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2936:39:1;;;;;;;;;;;2929:46;;2830:152;;;:::o;56:3379::-;;;;;;;;:::o",
  "source": "pragma solidity >=0.4.21 <0.7.0;\nimport \"./Topic.sol\";\n\ncontract PredictionMarket {\n    // Structs for users and arbitrators. Default scores = 100\n    struct Trader {\n        uint winScore;\n        uint loseScore;\n        bool isValid; \n    }\n\n    struct Arbitrator {\n        int trustworthiness;\n        bool isValid;\n    }\n\n    // Maps of addresses to different entities\n    mapping (address => Trader) public traders;\n    mapping (address => Arbitrator) public arbitrators;\n    mapping (address => Topic) public marketTopics;\n\n\n    // Struct create functions\n    function createTrader() public {\n        address id = msg.sender;\n        // // require that address has not been assigned to a trader\n        require(!traders[id].isValid);\n\n        // // create new trader with the default values\n        traders[id] = Trader(100, 100, true);\n    }\n\n    function createArbitrator() public {\n        address id = msg.sender;\n\n        // require that address has not been assigned to a arbitrator\n        require(!arbitrators[id].isValid);\n\n        // create new arbitrator with the default values\n        arbitrators[id] = Arbitrator(100, true);\n    }\n\n\n    // Topics\n    function createTopic(\n        string memory name, string memory description, bytes32[] memory options, uint256 expiryDate\n    ) public payable\n        {\n        address payable creatorId = msg.sender;\n\n        // Creator must have a trader account\n        require(traders[creatorId].isValid);\n\n        // Must have value above 0 ETH for payment of creation bond\n        require(msg.value > 0 ether);\n\n        uint bondValue = msg.value;\n        Topic newTopic = new Topic(creatorId, name, description, options, bondValue, expiryDate);\n        address payable topicAddress = address(uint160(address(newTopic))); // to cast from address to address payable\n        // topicAddress.transfer(bondValue);\n        marketTopics[topicAddress] = newTopic;\n        emit TopicCreated(topicAddress);\n    }\n\n    // // TODO: To complete createTopic function when Topic contract is completed\n    // function createTopic(string _name, string _description, string[] _options, datetime _resolution, address _topicCreator, address[] _arbitrators) public {\n    //     // create new topic\n    //     return new Topic()\n    // }\n\n    // For testing purposes\n    event TopicCreated(address _topicAddress);\n\n    function getCreatorAddress(address payable topicAddress) public view returns (address payable) {\n        return marketTopics[topicAddress].topicCreator();\n    }\n\n    function getName(address payable topicAddress) public view returns (string memory) {\n        return marketTopics[topicAddress].name();\n    }\n\n    function getDescription(address payable topicAddress) public view returns (string memory) {\n        return marketTopics[topicAddress].description();\n    }\n\n    function getOptions(address payable topicAddress) public view returns (bytes32[] memory) {\n        return marketTopics[topicAddress].getOptions();\n    }\n\n    function getMarketCap(address payable topicAddress) public view returns (uint) {\n        return marketTopics[topicAddress].marketCap();\n    }\n\n    function getCreatorBond(address payable topicAddress) public view returns (uint) {\n        return marketTopics[topicAddress].creatorBond();\n    }\n\n    function getExpiryDate(address payable topicAddress) public view returns (uint256) {\n        return marketTopics[topicAddress].expiryDate();\n    }\n\n}",
  "sourcePath": "/Users/collinlim/Desktop/Desktop.nosync/School/CZ4153/Project/Decentralised_Prediction_Market/contracts/PredictionMarket.sol",
  "ast": {
    "absolutePath": "/Users/collinlim/Desktop/Desktop.nosync/School/CZ4153/Project/Decentralised_Prediction_Market/contracts/PredictionMarket.sol",
    "exportedSymbols": {
      "PredictionMarket": [
        289
      ]
    },
    "id": 290,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 38,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:1"
      },
      {
        "absolutePath": "/Users/collinlim/Desktop/Desktop.nosync/School/CZ4153/Project/Decentralised_Prediction_Market/contracts/Topic.sol",
        "file": "./Topic.sol",
        "id": 39,
        "nodeType": "ImportDirective",
        "scope": 290,
        "sourceUnit": 651,
        "src": "33:21:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          650
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 289,
        "linearizedBaseContracts": [
          289
        ],
        "name": "PredictionMarket",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "PredictionMarket.Trader",
            "id": 46,
            "members": [
              {
                "constant": false,
                "id": 41,
                "name": "winScore",
                "nodeType": "VariableDeclaration",
                "scope": 46,
                "src": "175:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "175:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 43,
                "name": "loseScore",
                "nodeType": "VariableDeclaration",
                "scope": 46,
                "src": "198:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 42,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "198:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45,
                "name": "isValid",
                "nodeType": "VariableDeclaration",
                "scope": 46,
                "src": "222:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 44,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "222:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Trader",
            "nodeType": "StructDefinition",
            "scope": 289,
            "src": "151:91:1",
            "visibility": "public"
          },
          {
            "canonicalName": "PredictionMarket.Arbitrator",
            "id": 51,
            "members": [
              {
                "constant": false,
                "id": 48,
                "name": "trustworthiness",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "276:19:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 47,
                  "name": "int",
                  "nodeType": "ElementaryTypeName",
                  "src": "276:3:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50,
                "name": "isValid",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "305:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 49,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "305:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Arbitrator",
            "nodeType": "StructDefinition",
            "scope": 289,
            "src": "248:76:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 55,
            "name": "traders",
            "nodeType": "VariableDeclaration",
            "scope": 289,
            "src": "377:42:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trader_$46_storage_$",
              "typeString": "mapping(address => struct PredictionMarket.Trader)"
            },
            "typeName": {
              "id": 54,
              "keyType": {
                "id": 52,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "386:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "377:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trader_$46_storage_$",
                "typeString": "mapping(address => struct PredictionMarket.Trader)"
              },
              "valueType": {
                "contractScope": null,
                "id": 53,
                "name": "Trader",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 46,
                "src": "397:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Trader_$46_storage_ptr",
                  "typeString": "struct PredictionMarket.Trader"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 59,
            "name": "arbitrators",
            "nodeType": "VariableDeclaration",
            "scope": 289,
            "src": "425:50:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Arbitrator_$51_storage_$",
              "typeString": "mapping(address => struct PredictionMarket.Arbitrator)"
            },
            "typeName": {
              "id": 58,
              "keyType": {
                "id": 56,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "434:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "425:31:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Arbitrator_$51_storage_$",
                "typeString": "mapping(address => struct PredictionMarket.Arbitrator)"
              },
              "valueType": {
                "contractScope": null,
                "id": 57,
                "name": "Arbitrator",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 51,
                "src": "445:10:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Arbitrator_$51_storage_ptr",
                  "typeString": "struct PredictionMarket.Arbitrator"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 63,
            "name": "marketTopics",
            "nodeType": "VariableDeclaration",
            "scope": 289,
            "src": "481:46:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Topic_$650_$",
              "typeString": "mapping(address => contract Topic)"
            },
            "typeName": {
              "id": 62,
              "keyType": {
                "id": 60,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "490:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "481:26:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Topic_$650_$",
                "typeString": "mapping(address => contract Topic)"
              },
              "valueType": {
                "contractScope": null,
                "id": 61,
                "name": "Topic",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 650,
                "src": "501:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Topic_$650",
                  "typeString": "contract Topic"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "597:251:1",
              "statements": [
                {
                  "assignments": [
                    67
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67,
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 89,
                      "src": "607:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 66,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "607:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 70,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 68,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 665,
                      "src": "620:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "620:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "607:23:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "717:20:1",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 72,
                              "name": "traders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55,
                              "src": "718:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trader_$46_storage_$",
                                "typeString": "mapping(address => struct PredictionMarket.Trader storage ref)"
                              }
                            },
                            "id": 74,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 73,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "726:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "718:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trader_$46_storage",
                              "typeString": "struct PredictionMarket.Trader storage ref"
                            }
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isValid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45,
                          "src": "718:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 71,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        668,
                        669
                      ],
                      "referencedDeclaration": 668,
                      "src": "709:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "709:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "709:29:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 79,
                        "name": "traders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "805:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trader_$46_storage_$",
                          "typeString": "mapping(address => struct PredictionMarket.Trader storage ref)"
                        }
                      },
                      "id": 81,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 80,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "813:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "805:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trader_$46_storage",
                        "typeString": "struct PredictionMarket.Trader storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 83,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "826:3:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "831:3:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "836:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 82,
                        "name": "Trader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "819:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Trader_$46_storage_ptr_$",
                          "typeString": "type(struct PredictionMarket.Trader storage pointer)"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "819:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trader_$46_memory",
                        "typeString": "struct PredictionMarket.Trader memory"
                      }
                    },
                    "src": "805:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trader_$46_storage",
                      "typeString": "struct PredictionMarket.Trader storage ref"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "805:36:1"
                }
              ]
            },
            "documentation": null,
            "id": 90,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createTrader",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "587:2:1"
            },
            "returnParameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "597:0:1"
            },
            "scope": 289,
            "src": "566:282:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 115,
              "nodeType": "Block",
              "src": "889:261:1",
              "statements": [
                {
                  "assignments": [
                    94
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 94,
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 115,
                      "src": "899:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 93,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "899:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 97,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 95,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 665,
                      "src": "912:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "912:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "899:23:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1011:24:1",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 99,
                              "name": "arbitrators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
                              "src": "1012:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Arbitrator_$51_storage_$",
                                "typeString": "mapping(address => struct PredictionMarket.Arbitrator storage ref)"
                              }
                            },
                            "id": 101,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 100,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "1024:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1012:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Arbitrator_$51_storage",
                              "typeString": "struct PredictionMarket.Arbitrator storage ref"
                            }
                          },
                          "id": 102,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isValid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50,
                          "src": "1012:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 98,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        668,
                        669
                      ],
                      "referencedDeclaration": 668,
                      "src": "1003:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1003:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1003:33:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "arbitrators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "1104:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Arbitrator_$51_storage_$",
                          "typeString": "mapping(address => struct PredictionMarket.Arbitrator storage ref)"
                        }
                      },
                      "id": 108,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 107,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "1116:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1104:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Arbitrator_$51_storage",
                        "typeString": "struct PredictionMarket.Arbitrator storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1133:3:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1138:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 109,
                        "name": "Arbitrator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "1122:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Arbitrator_$51_storage_ptr_$",
                          "typeString": "type(struct PredictionMarket.Arbitrator storage pointer)"
                        }
                      },
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1122:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Arbitrator_$51_memory",
                        "typeString": "struct PredictionMarket.Arbitrator memory"
                      }
                    },
                    "src": "1104:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Arbitrator_$51_storage",
                      "typeString": "struct PredictionMarket.Arbitrator storage ref"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1104:39:1"
                }
              ]
            },
            "documentation": null,
            "id": 116,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createArbitrator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "879:2:1"
            },
            "returnParameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "889:0:1"
            },
            "scope": 289,
            "src": "854:296:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "1322:641:1",
              "statements": [
                {
                  "assignments": [
                    129
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 129,
                      "name": "creatorId",
                      "nodeType": "VariableDeclaration",
                      "scope": 184,
                      "src": "1332:25:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 128,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1332:15:1",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 132,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 130,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 665,
                      "src": "1360:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1360:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1332:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 134,
                            "name": "traders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "1435:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trader_$46_storage_$",
                              "typeString": "mapping(address => struct PredictionMarket.Trader storage ref)"
                            }
                          },
                          "id": 136,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 135,
                            "name": "creatorId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "1443:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1435:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trader_$46_storage",
                            "typeString": "struct PredictionMarket.Trader storage ref"
                          }
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isValid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45,
                        "src": "1435:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 133,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        668,
                        669
                      ],
                      "referencedDeclaration": 668,
                      "src": "1427:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1427:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "1427:35:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 141,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 665,
                            "src": "1549:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1549:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1561:7:1",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1549:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 140,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        668,
                        669
                      ],
                      "referencedDeclaration": 668,
                      "src": "1541:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1541:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "1541:28:1"
                },
                {
                  "assignments": [
                    148
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 148,
                      "name": "bondValue",
                      "nodeType": "VariableDeclaration",
                      "scope": 184,
                      "src": "1580:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 147,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1580:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 151,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 149,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 665,
                      "src": "1597:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1597:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1580:26:1"
                },
                {
                  "assignments": [
                    153
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 153,
                      "name": "newTopic",
                      "nodeType": "VariableDeclaration",
                      "scope": 184,
                      "src": "1616:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Topic_$650",
                        "typeString": "contract Topic"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 152,
                        "name": "Topic",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 650,
                        "src": "1616:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Topic_$650",
                          "typeString": "contract Topic"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 163,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 156,
                        "name": "creatorId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "1643:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 157,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "1654:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 158,
                        "name": "description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "1660:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 159,
                        "name": "options",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "1673:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 160,
                        "name": "bondValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "1682:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 161,
                        "name": "expiryDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "1693:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1633:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_payable_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_contract$_Topic_$650_$",
                        "typeString": "function (address payable,string memory,string memory,bytes32[] memory,uint256,uint256) payable returns (contract Topic)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 154,
                        "name": "Topic",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 650,
                        "src": "1637:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Topic_$650",
                          "typeString": "contract Topic"
                        }
                      }
                    },
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1633:71:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Topic_$650",
                      "typeString": "contract Topic"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1616:88:1"
                },
                {
                  "assignments": [
                    165
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 165,
                      "name": "topicAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 184,
                      "src": "1714:28:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 164,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1714:15:1",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 173,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 169,
                                "name": "newTopic",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 153,
                                "src": "1769:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Topic_$650",
                                  "typeString": "contract Topic"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Topic_$650",
                                  "typeString": "contract Topic"
                                }
                              ],
                              "id": 168,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1761:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1761:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1753:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint160_$",
                            "typeString": "type(uint160)"
                          },
                          "typeName": "uint160"
                        },
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1753:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      ],
                      "id": 166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1745:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1745:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1714:66:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 174,
                        "name": "marketTopics",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "1878:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Topic_$650_$",
                          "typeString": "mapping(address => contract Topic)"
                        }
                      },
                      "id": 176,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 175,
                        "name": "topicAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "1891:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1878:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Topic_$650",
                        "typeString": "contract Topic"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 177,
                      "name": "newTopic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "1907:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Topic_$650",
                        "typeString": "contract Topic"
                      }
                    },
                    "src": "1878:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Topic_$650",
                      "typeString": "contract Topic"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "1878:37:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 181,
                        "name": "topicAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "1943:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 180,
                      "name": "TopicCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 189,
                      "src": "1930:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1930:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 183,
                  "nodeType": "EmitStatement",
                  "src": "1925:31:1"
                }
              ]
            },
            "documentation": null,
            "id": 185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createTopic",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "1201:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1201:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "1221:25:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1221:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 123,
                  "name": "options",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "1248:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 121,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1248:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 122,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1248:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 125,
                  "name": "expiryDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "1274:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1274:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1191:107:1"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1322:0:1"
            },
            "scope": 289,
            "src": "1171:792:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 189,
            "name": "TopicCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "indexed": false,
                  "name": "_topicAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "2329:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2329:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2328:23:1"
            },
            "src": "2310:42:1"
          },
          {
            "body": {
              "id": 202,
              "nodeType": "Block",
              "src": "2453:65:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 196,
                          "name": "marketTopics",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "2470:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Topic_$650_$",
                            "typeString": "mapping(address => contract Topic)"
                          }
                        },
                        "id": 198,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 197,
                          "name": "topicAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 191,
                          "src": "2483:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2470:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Topic_$650",
                          "typeString": "contract Topic"
                        }
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "topicCreator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 293,
                      "src": "2470:39:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_payable_$",
                        "typeString": "function () view external returns (address payable)"
                      }
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2470:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 195,
                  "id": 201,
                  "nodeType": "Return",
                  "src": "2463:48:1"
                }
              ]
            },
            "documentation": null,
            "id": 203,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCreatorAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "name": "topicAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "2385:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2385:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2384:30:1"
            },
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "2436:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2436:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2435:17:1"
            },
            "scope": 289,
            "src": "2358:160:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 216,
              "nodeType": "Block",
              "src": "2607:57:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 210,
                          "name": "marketTopics",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "2624:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Topic_$650_$",
                            "typeString": "mapping(address => contract Topic)"
                          }
                        },
                        "id": 212,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 211,
                          "name": "topicAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 205,
                          "src": "2637:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2624:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Topic_$650",
                          "typeString": "contract Topic"
                        }
                      },
                      "id": 213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 295,
                      "src": "2624:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_$",
                        "typeString": "function () view external returns (string memory)"
                      }
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2624:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 209,
                  "id": 215,
                  "nodeType": "Return",
                  "src": "2617:40:1"
                }
              ]
            },
            "documentation": null,
            "id": 217,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 205,
                  "name": "topicAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 217,
                  "src": "2541:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2541:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2540:30:1"
            },
            "returnParameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 208,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 217,
                  "src": "2592:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2592:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2591:15:1"
            },
            "scope": 289,
            "src": "2524:140:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 230,
              "nodeType": "Block",
              "src": "2760:64:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 224,
                          "name": "marketTopics",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "2777:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Topic_$650_$",
                            "typeString": "mapping(address => contract Topic)"
                          }
                        },
                        "id": 226,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 225,
                          "name": "topicAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 219,
                          "src": "2790:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2777:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Topic_$650",
                          "typeString": "contract Topic"
                        }
                      },
                      "id": 227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "description",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 297,
                      "src": "2777:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_$",
                        "typeString": "function () view external returns (string memory)"
                      }
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2777:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 223,
                  "id": 229,
                  "nodeType": "Return",
                  "src": "2770:47:1"
                }
              ]
            },
            "documentation": null,
            "id": 231,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDescription",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 219,
                  "name": "topicAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "2694:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2694:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2693:30:1"
            },
            "returnParameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 222,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "2745:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2745:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2744:15:1"
            },
            "scope": 289,
            "src": "2670:154:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 245,
              "nodeType": "Block",
              "src": "2919:63:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 239,
                          "name": "marketTopics",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "2936:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Topic_$650_$",
                            "typeString": "mapping(address => contract Topic)"
                          }
                        },
                        "id": 241,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 240,
                          "name": "topicAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 233,
                          "src": "2949:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2936:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Topic_$650",
                          "typeString": "contract Topic"
                        }
                      },
                      "id": 242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getOptions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 649,
                      "src": "2936:37:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (bytes32[] memory)"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2936:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "functionReturnParameters": 238,
                  "id": 244,
                  "nodeType": "Return",
                  "src": "2929:46:1"
                }
              ]
            },
            "documentation": null,
            "id": 246,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOptions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "name": "topicAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "2850:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2850:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2849:30:1"
            },
            "returnParameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 237,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "2901:16:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 235,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2901:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 236,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2901:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2900:18:1"
            },
            "scope": 289,
            "src": "2830:152:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 259,
              "nodeType": "Block",
              "src": "3067:62:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 253,
                          "name": "marketTopics",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "3084:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Topic_$650_$",
                            "typeString": "mapping(address => contract Topic)"
                          }
                        },
                        "id": 255,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 254,
                          "name": "topicAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 248,
                          "src": "3097:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3084:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Topic_$650",
                          "typeString": "contract Topic"
                        }
                      },
                      "id": 256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketCap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 302,
                      "src": "3084:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3084:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 252,
                  "id": 258,
                  "nodeType": "Return",
                  "src": "3077:45:1"
                }
              ]
            },
            "documentation": null,
            "id": 260,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMarketCap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 248,
                  "name": "topicAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "3010:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3010:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3009:30:1"
            },
            "returnParameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 251,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "3061:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3061:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3060:6:1"
            },
            "scope": 289,
            "src": "2988:141:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 273,
              "nodeType": "Block",
              "src": "3216:64:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 267,
                          "name": "marketTopics",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "3233:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Topic_$650_$",
                            "typeString": "mapping(address => contract Topic)"
                          }
                        },
                        "id": 269,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 268,
                          "name": "topicAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 262,
                          "src": "3246:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3233:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Topic_$650",
                          "typeString": "contract Topic"
                        }
                      },
                      "id": 270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "creatorBond",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 304,
                      "src": "3233:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3233:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 266,
                  "id": 272,
                  "nodeType": "Return",
                  "src": "3226:47:1"
                }
              ]
            },
            "documentation": null,
            "id": 274,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCreatorBond",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 262,
                  "name": "topicAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 274,
                  "src": "3159:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3159:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3158:30:1"
            },
            "returnParameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 274,
                  "src": "3210:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3210:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3209:6:1"
            },
            "scope": 289,
            "src": "3135:145:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 287,
              "nodeType": "Block",
              "src": "3369:63:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 281,
                          "name": "marketTopics",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "3386:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Topic_$650_$",
                            "typeString": "mapping(address => contract Topic)"
                          }
                        },
                        "id": 283,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 282,
                          "name": "topicAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 276,
                          "src": "3399:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3386:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Topic_$650",
                          "typeString": "contract Topic"
                        }
                      },
                      "id": 284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expiryDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 306,
                      "src": "3386:37:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3386:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 280,
                  "id": 286,
                  "nodeType": "Return",
                  "src": "3379:46:1"
                }
              ]
            },
            "documentation": null,
            "id": 288,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExpiryDate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 276,
                  "name": "topicAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "3309:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 275,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3309:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3308:30:1"
            },
            "returnParameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 279,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "3360:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3360:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3359:9:1"
            },
            "scope": 289,
            "src": "3286:146:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 290,
        "src": "56:3379:1"
      }
    ],
    "src": "0:3435:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/collinlim/Desktop/Desktop.nosync/School/CZ4153/Project/Decentralised_Prediction_Market/contracts/PredictionMarket.sol",
    "exportedSymbols": {
      "PredictionMarket": [
        289
      ]
    },
    "id": 290,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 38,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:1"
      },
      {
        "absolutePath": "/Users/collinlim/Desktop/Desktop.nosync/School/CZ4153/Project/Decentralised_Prediction_Market/contracts/Topic.sol",
        "file": "./Topic.sol",
        "id": 39,
        "nodeType": "ImportDirective",
        "scope": 290,
        "sourceUnit": 651,
        "src": "33:21:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          650
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 289,
        "linearizedBaseContracts": [
          289
        ],
        "name": "PredictionMarket",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "PredictionMarket.Trader",
            "id": 46,
            "members": [
              {
                "constant": false,
                "id": 41,
                "name": "winScore",
                "nodeType": "VariableDeclaration",
                "scope": 46,
                "src": "175:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "175:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 43,
                "name": "loseScore",
                "nodeType": "VariableDeclaration",
                "scope": 46,
                "src": "198:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 42,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "198:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45,
                "name": "isValid",
                "nodeType": "VariableDeclaration",
                "scope": 46,
                "src": "222:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 44,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "222:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Trader",
            "nodeType": "StructDefinition",
            "scope": 289,
            "src": "151:91:1",
            "visibility": "public"
          },
          {
            "canonicalName": "PredictionMarket.Arbitrator",
            "id": 51,
            "members": [
              {
                "constant": false,
                "id": 48,
                "name": "trustworthiness",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "276:19:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 47,
                  "name": "int",
                  "nodeType": "ElementaryTypeName",
                  "src": "276:3:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50,
                "name": "isValid",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "305:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 49,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "305:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Arbitrator",
            "nodeType": "StructDefinition",
            "scope": 289,
            "src": "248:76:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 55,
            "name": "traders",
            "nodeType": "VariableDeclaration",
            "scope": 289,
            "src": "377:42:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trader_$46_storage_$",
              "typeString": "mapping(address => struct PredictionMarket.Trader)"
            },
            "typeName": {
              "id": 54,
              "keyType": {
                "id": 52,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "386:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "377:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trader_$46_storage_$",
                "typeString": "mapping(address => struct PredictionMarket.Trader)"
              },
              "valueType": {
                "contractScope": null,
                "id": 53,
                "name": "Trader",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 46,
                "src": "397:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Trader_$46_storage_ptr",
                  "typeString": "struct PredictionMarket.Trader"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 59,
            "name": "arbitrators",
            "nodeType": "VariableDeclaration",
            "scope": 289,
            "src": "425:50:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Arbitrator_$51_storage_$",
              "typeString": "mapping(address => struct PredictionMarket.Arbitrator)"
            },
            "typeName": {
              "id": 58,
              "keyType": {
                "id": 56,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "434:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "425:31:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Arbitrator_$51_storage_$",
                "typeString": "mapping(address => struct PredictionMarket.Arbitrator)"
              },
              "valueType": {
                "contractScope": null,
                "id": 57,
                "name": "Arbitrator",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 51,
                "src": "445:10:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Arbitrator_$51_storage_ptr",
                  "typeString": "struct PredictionMarket.Arbitrator"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 63,
            "name": "marketTopics",
            "nodeType": "VariableDeclaration",
            "scope": 289,
            "src": "481:46:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Topic_$650_$",
              "typeString": "mapping(address => contract Topic)"
            },
            "typeName": {
              "id": 62,
              "keyType": {
                "id": 60,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "490:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "481:26:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Topic_$650_$",
                "typeString": "mapping(address => contract Topic)"
              },
              "valueType": {
                "contractScope": null,
                "id": 61,
                "name": "Topic",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 650,
                "src": "501:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Topic_$650",
                  "typeString": "contract Topic"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "597:251:1",
              "statements": [
                {
                  "assignments": [
                    67
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67,
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 89,
                      "src": "607:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 66,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "607:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 70,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 68,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 665,
                      "src": "620:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "620:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "607:23:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "717:20:1",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 72,
                              "name": "traders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55,
                              "src": "718:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trader_$46_storage_$",
                                "typeString": "mapping(address => struct PredictionMarket.Trader storage ref)"
                              }
                            },
                            "id": 74,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 73,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "726:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "718:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trader_$46_storage",
                              "typeString": "struct PredictionMarket.Trader storage ref"
                            }
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isValid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45,
                          "src": "718:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 71,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        668,
                        669
                      ],
                      "referencedDeclaration": 668,
                      "src": "709:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "709:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "709:29:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 79,
                        "name": "traders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "805:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trader_$46_storage_$",
                          "typeString": "mapping(address => struct PredictionMarket.Trader storage ref)"
                        }
                      },
                      "id": 81,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 80,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "813:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "805:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trader_$46_storage",
                        "typeString": "struct PredictionMarket.Trader storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 83,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "826:3:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "831:3:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "836:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 82,
                        "name": "Trader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "819:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Trader_$46_storage_ptr_$",
                          "typeString": "type(struct PredictionMarket.Trader storage pointer)"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "819:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trader_$46_memory",
                        "typeString": "struct PredictionMarket.Trader memory"
                      }
                    },
                    "src": "805:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trader_$46_storage",
                      "typeString": "struct PredictionMarket.Trader storage ref"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "805:36:1"
                }
              ]
            },
            "documentation": null,
            "id": 90,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createTrader",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "587:2:1"
            },
            "returnParameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "597:0:1"
            },
            "scope": 289,
            "src": "566:282:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 115,
              "nodeType": "Block",
              "src": "889:261:1",
              "statements": [
                {
                  "assignments": [
                    94
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 94,
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 115,
                      "src": "899:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 93,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "899:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 97,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 95,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 665,
                      "src": "912:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "912:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "899:23:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1011:24:1",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 99,
                              "name": "arbitrators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
                              "src": "1012:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Arbitrator_$51_storage_$",
                                "typeString": "mapping(address => struct PredictionMarket.Arbitrator storage ref)"
                              }
                            },
                            "id": 101,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 100,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "1024:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1012:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Arbitrator_$51_storage",
                              "typeString": "struct PredictionMarket.Arbitrator storage ref"
                            }
                          },
                          "id": 102,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isValid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50,
                          "src": "1012:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 98,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        668,
                        669
                      ],
                      "referencedDeclaration": 668,
                      "src": "1003:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1003:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1003:33:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "arbitrators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "1104:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Arbitrator_$51_storage_$",
                          "typeString": "mapping(address => struct PredictionMarket.Arbitrator storage ref)"
                        }
                      },
                      "id": 108,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 107,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "1116:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1104:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Arbitrator_$51_storage",
                        "typeString": "struct PredictionMarket.Arbitrator storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1133:3:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1138:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 109,
                        "name": "Arbitrator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "1122:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Arbitrator_$51_storage_ptr_$",
                          "typeString": "type(struct PredictionMarket.Arbitrator storage pointer)"
                        }
                      },
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1122:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Arbitrator_$51_memory",
                        "typeString": "struct PredictionMarket.Arbitrator memory"
                      }
                    },
                    "src": "1104:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Arbitrator_$51_storage",
                      "typeString": "struct PredictionMarket.Arbitrator storage ref"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1104:39:1"
                }
              ]
            },
            "documentation": null,
            "id": 116,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createArbitrator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "879:2:1"
            },
            "returnParameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "889:0:1"
            },
            "scope": 289,
            "src": "854:296:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "1322:641:1",
              "statements": [
                {
                  "assignments": [
                    129
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 129,
                      "name": "creatorId",
                      "nodeType": "VariableDeclaration",
                      "scope": 184,
                      "src": "1332:25:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 128,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1332:15:1",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 132,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 130,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 665,
                      "src": "1360:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1360:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1332:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 134,
                            "name": "traders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "1435:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trader_$46_storage_$",
                              "typeString": "mapping(address => struct PredictionMarket.Trader storage ref)"
                            }
                          },
                          "id": 136,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 135,
                            "name": "creatorId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "1443:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1435:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trader_$46_storage",
                            "typeString": "struct PredictionMarket.Trader storage ref"
                          }
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isValid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45,
                        "src": "1435:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 133,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        668,
                        669
                      ],
                      "referencedDeclaration": 668,
                      "src": "1427:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1427:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "1427:35:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 141,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 665,
                            "src": "1549:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1549:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1561:7:1",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1549:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 140,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        668,
                        669
                      ],
                      "referencedDeclaration": 668,
                      "src": "1541:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1541:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "1541:28:1"
                },
                {
                  "assignments": [
                    148
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 148,
                      "name": "bondValue",
                      "nodeType": "VariableDeclaration",
                      "scope": 184,
                      "src": "1580:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 147,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1580:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 151,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 149,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 665,
                      "src": "1597:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1597:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1580:26:1"
                },
                {
                  "assignments": [
                    153
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 153,
                      "name": "newTopic",
                      "nodeType": "VariableDeclaration",
                      "scope": 184,
                      "src": "1616:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Topic_$650",
                        "typeString": "contract Topic"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 152,
                        "name": "Topic",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 650,
                        "src": "1616:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Topic_$650",
                          "typeString": "contract Topic"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 163,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 156,
                        "name": "creatorId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "1643:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 157,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "1654:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 158,
                        "name": "description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "1660:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 159,
                        "name": "options",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "1673:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 160,
                        "name": "bondValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "1682:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 161,
                        "name": "expiryDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "1693:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1633:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_payable_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_contract$_Topic_$650_$",
                        "typeString": "function (address payable,string memory,string memory,bytes32[] memory,uint256,uint256) payable returns (contract Topic)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 154,
                        "name": "Topic",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 650,
                        "src": "1637:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Topic_$650",
                          "typeString": "contract Topic"
                        }
                      }
                    },
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1633:71:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Topic_$650",
                      "typeString": "contract Topic"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1616:88:1"
                },
                {
                  "assignments": [
                    165
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 165,
                      "name": "topicAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 184,
                      "src": "1714:28:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 164,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1714:15:1",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 173,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 169,
                                "name": "newTopic",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 153,
                                "src": "1769:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Topic_$650",
                                  "typeString": "contract Topic"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Topic_$650",
                                  "typeString": "contract Topic"
                                }
                              ],
                              "id": 168,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1761:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1761:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1753:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint160_$",
                            "typeString": "type(uint160)"
                          },
                          "typeName": "uint160"
                        },
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1753:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      ],
                      "id": 166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1745:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1745:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1714:66:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 174,
                        "name": "marketTopics",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "1878:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Topic_$650_$",
                          "typeString": "mapping(address => contract Topic)"
                        }
                      },
                      "id": 176,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 175,
                        "name": "topicAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "1891:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1878:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Topic_$650",
                        "typeString": "contract Topic"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 177,
                      "name": "newTopic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "1907:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Topic_$650",
                        "typeString": "contract Topic"
                      }
                    },
                    "src": "1878:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Topic_$650",
                      "typeString": "contract Topic"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "1878:37:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 181,
                        "name": "topicAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "1943:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 180,
                      "name": "TopicCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 189,
                      "src": "1930:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1930:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 183,
                  "nodeType": "EmitStatement",
                  "src": "1925:31:1"
                }
              ]
            },
            "documentation": null,
            "id": 185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createTopic",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "1201:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1201:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "1221:25:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1221:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 123,
                  "name": "options",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "1248:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 121,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1248:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 122,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1248:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 125,
                  "name": "expiryDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "1274:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1274:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1191:107:1"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1322:0:1"
            },
            "scope": 289,
            "src": "1171:792:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 189,
            "name": "TopicCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "indexed": false,
                  "name": "_topicAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "2329:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2329:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2328:23:1"
            },
            "src": "2310:42:1"
          },
          {
            "body": {
              "id": 202,
              "nodeType": "Block",
              "src": "2453:65:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 196,
                          "name": "marketTopics",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "2470:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Topic_$650_$",
                            "typeString": "mapping(address => contract Topic)"
                          }
                        },
                        "id": 198,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 197,
                          "name": "topicAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 191,
                          "src": "2483:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2470:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Topic_$650",
                          "typeString": "contract Topic"
                        }
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "topicCreator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 293,
                      "src": "2470:39:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_payable_$",
                        "typeString": "function () view external returns (address payable)"
                      }
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2470:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 195,
                  "id": 201,
                  "nodeType": "Return",
                  "src": "2463:48:1"
                }
              ]
            },
            "documentation": null,
            "id": 203,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCreatorAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "name": "topicAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "2385:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2385:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2384:30:1"
            },
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "2436:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2436:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2435:17:1"
            },
            "scope": 289,
            "src": "2358:160:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 216,
              "nodeType": "Block",
              "src": "2607:57:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 210,
                          "name": "marketTopics",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "2624:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Topic_$650_$",
                            "typeString": "mapping(address => contract Topic)"
                          }
                        },
                        "id": 212,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 211,
                          "name": "topicAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 205,
                          "src": "2637:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2624:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Topic_$650",
                          "typeString": "contract Topic"
                        }
                      },
                      "id": 213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 295,
                      "src": "2624:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_$",
                        "typeString": "function () view external returns (string memory)"
                      }
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2624:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 209,
                  "id": 215,
                  "nodeType": "Return",
                  "src": "2617:40:1"
                }
              ]
            },
            "documentation": null,
            "id": 217,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 205,
                  "name": "topicAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 217,
                  "src": "2541:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2541:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2540:30:1"
            },
            "returnParameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 208,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 217,
                  "src": "2592:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2592:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2591:15:1"
            },
            "scope": 289,
            "src": "2524:140:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 230,
              "nodeType": "Block",
              "src": "2760:64:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 224,
                          "name": "marketTopics",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "2777:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Topic_$650_$",
                            "typeString": "mapping(address => contract Topic)"
                          }
                        },
                        "id": 226,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 225,
                          "name": "topicAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 219,
                          "src": "2790:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2777:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Topic_$650",
                          "typeString": "contract Topic"
                        }
                      },
                      "id": 227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "description",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 297,
                      "src": "2777:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_$",
                        "typeString": "function () view external returns (string memory)"
                      }
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2777:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 223,
                  "id": 229,
                  "nodeType": "Return",
                  "src": "2770:47:1"
                }
              ]
            },
            "documentation": null,
            "id": 231,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDescription",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 219,
                  "name": "topicAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "2694:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2694:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2693:30:1"
            },
            "returnParameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 222,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "2745:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2745:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2744:15:1"
            },
            "scope": 289,
            "src": "2670:154:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 245,
              "nodeType": "Block",
              "src": "2919:63:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 239,
                          "name": "marketTopics",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "2936:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Topic_$650_$",
                            "typeString": "mapping(address => contract Topic)"
                          }
                        },
                        "id": 241,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 240,
                          "name": "topicAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 233,
                          "src": "2949:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2936:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Topic_$650",
                          "typeString": "contract Topic"
                        }
                      },
                      "id": 242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getOptions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 649,
                      "src": "2936:37:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (bytes32[] memory)"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2936:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "functionReturnParameters": 238,
                  "id": 244,
                  "nodeType": "Return",
                  "src": "2929:46:1"
                }
              ]
            },
            "documentation": null,
            "id": 246,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOptions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "name": "topicAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "2850:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2850:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2849:30:1"
            },
            "returnParameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 237,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "2901:16:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 235,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2901:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 236,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2901:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2900:18:1"
            },
            "scope": 289,
            "src": "2830:152:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 259,
              "nodeType": "Block",
              "src": "3067:62:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 253,
                          "name": "marketTopics",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "3084:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Topic_$650_$",
                            "typeString": "mapping(address => contract Topic)"
                          }
                        },
                        "id": 255,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 254,
                          "name": "topicAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 248,
                          "src": "3097:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3084:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Topic_$650",
                          "typeString": "contract Topic"
                        }
                      },
                      "id": 256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketCap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 302,
                      "src": "3084:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3084:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 252,
                  "id": 258,
                  "nodeType": "Return",
                  "src": "3077:45:1"
                }
              ]
            },
            "documentation": null,
            "id": 260,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMarketCap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 248,
                  "name": "topicAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "3010:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3010:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3009:30:1"
            },
            "returnParameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 251,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "3061:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3061:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3060:6:1"
            },
            "scope": 289,
            "src": "2988:141:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 273,
              "nodeType": "Block",
              "src": "3216:64:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 267,
                          "name": "marketTopics",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "3233:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Topic_$650_$",
                            "typeString": "mapping(address => contract Topic)"
                          }
                        },
                        "id": 269,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 268,
                          "name": "topicAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 262,
                          "src": "3246:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3233:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Topic_$650",
                          "typeString": "contract Topic"
                        }
                      },
                      "id": 270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "creatorBond",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 304,
                      "src": "3233:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3233:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 266,
                  "id": 272,
                  "nodeType": "Return",
                  "src": "3226:47:1"
                }
              ]
            },
            "documentation": null,
            "id": 274,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCreatorBond",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 262,
                  "name": "topicAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 274,
                  "src": "3159:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3159:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3158:30:1"
            },
            "returnParameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 274,
                  "src": "3210:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3210:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3209:6:1"
            },
            "scope": 289,
            "src": "3135:145:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 287,
              "nodeType": "Block",
              "src": "3369:63:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 281,
                          "name": "marketTopics",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "3386:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Topic_$650_$",
                            "typeString": "mapping(address => contract Topic)"
                          }
                        },
                        "id": 283,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 282,
                          "name": "topicAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 276,
                          "src": "3399:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3386:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Topic_$650",
                          "typeString": "contract Topic"
                        }
                      },
                      "id": 284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expiryDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 306,
                      "src": "3386:37:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3386:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 280,
                  "id": 286,
                  "nodeType": "Return",
                  "src": "3379:46:1"
                }
              ]
            },
            "documentation": null,
            "id": 288,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExpiryDate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 276,
                  "name": "topicAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "3309:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 275,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3309:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3308:30:1"
            },
            "returnParameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 279,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "3360:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3360:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3359:9:1"
            },
            "scope": 289,
            "src": "3286:146:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 290,
        "src": "56:3379:1"
      }
    ],
    "src": "0:3435:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x3c1b2955a570d7b24867f47b5827c8c97e344bed881c4519bad1dd91656279da": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_topicAddress",
              "type": "address"
            }
          ],
          "name": "TopicCreated",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xDA9F3fE112B0E29a5b050e32bd5EA8571461de73",
      "transactionHash": "0x8a55b38e1142cf67fb33f1241853e9d78b1475298bc1f52c4ca7ed4bd29487cb"
    }
  },
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-10-17T06:24:29.873Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}